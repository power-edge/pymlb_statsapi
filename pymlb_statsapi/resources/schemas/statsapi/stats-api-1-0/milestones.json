{
  "api_path": "stats-api/milestones",
  "apiVersion": "1.0",
  "src_url": "https://beta-statsapi.mlb.com/api/api_docs/stats-api/milestones",
  "apis": [
    {
      "description": "achievementStatuses",
      "operations": [
        {
          "method": "GET",
          "summary": "View available achievementStatus options",
          "notes": "achievementStatuses",
          "nickname": "achievementStatuses",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "items": {
            "type": "MilestoneAchievementType"
          },
          "type": "array",
          "uniqueItems": false
        }
      ],
      "path": "/v1/achievementStatuses"
    },
    {
      "description": "milestoneDurations",
      "operations": [
        {
          "method": "GET",
          "summary": "View available milestoneDurations options",
          "notes": "milestoneDurations",
          "nickname": "milestoneDurations",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "items": {
            "type": "MilestoneDuration"
          },
          "type": "array",
          "uniqueItems": false
        }
      ],
      "path": "/v1/milestoneDurations"
    },
    {
      "description": "milestoneLookups",
      "operations": [
        {
          "method": "GET",
          "summary": "View available milestoneType options",
          "notes": "milestoneLookups",
          "nickname": "milestoneLookups",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "Map«string,List«BeastLookup»»"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "Map«string,List«BeastLookup»»"
        }
      ],
      "path": "/v1/milestoneLookups"
    },
    {
      "description": "milestoneStatistics",
      "operations": [
        {
          "method": "GET",
          "summary": "View available milestone statistics options",
          "notes": "milestoneStatistics",
          "nickname": "milestoneStatistics",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "items": {
            "type": "Statistic"
          },
          "type": "array",
          "uniqueItems": false
        }
      ],
      "path": "/v1/milestoneStatistics"
    },
    {
      "description": "milestoneTypes",
      "operations": [
        {
          "method": "GET",
          "summary": "View available milestoneType options",
          "notes": "milestoneTypes",
          "nickname": "milestoneTypes",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "array"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "items": {
            "type": "MilestoneType"
          },
          "type": "array",
          "uniqueItems": false
        }
      ],
      "path": "/v1/milestoneTypes"
    },
    {
      "description": "milestones",
      "operations": [
        {
          "method": "GET",
          "summary": "View pending and achieved milestones.",
          "notes": "milestones",
          "nickname": "milestones",
          "produces": [
            "*/*"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "allowMultiple": false,
              "enum": [
                "PLAYER",
                "TEAM",
                "DIVISION",
                "LEAGUE",
                "SPORT"
              ],
              "defaultValue": "",
              "description": "Organization level. Format: T(Team), L(League), S(Sport)",
              "name": "orgType",
              "paramType": "query",
              "type": "string",
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of milestone achievement types",
              "name": "achievementStatuses",
              "paramType": "query",
              "items": {
                "type": "MilestoneAchievementType"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of milestone types",
              "name": "milestoneTypes",
              "paramType": "query",
              "items": {
                "type": "MilestoneType"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Filters out milestones that have already been surpassed.",
              "name": "isLastAchievement",
              "paramType": "query",
              "type": "boolean",
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of milestone statistics",
              "name": "milestoneStatistics",
              "paramType": "query",
              "items": {
                "type": "Statistic"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "A unique identifier for players",
              "name": "playerIds",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of Unique Team identifiers",
              "name": "teamIds",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of Unique league identifiers",
              "name": "leagueIds",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "enum": [
                "HITTING",
                "PITCHING",
                "FIELDING",
                "CATCHING",
                "RUNNING",
                "GAME",
                "TEAM",
                "STREAK",
                "SKATER",
                "GOALIE"
              ],
              "defaultValue": "",
              "description": "Category of statistic to return. Available types in /api/v1/statGroups",
              "name": "statGroup",
              "paramType": "query",
              "type": "string",
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of Seasons of play",
              "name": "seasons",
              "paramType": "query",
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": false,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of Unique venue identifiers",
              "name": "venueIds",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of unique primary keys",
              "name": "gamePks",
              "paramType": "query",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array",
              "uniqueItems": false,
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Number of results to return",
              "name": "limit",
              "paramType": "query",
              "format": "int32",
              "type": "integer",
              "required": false
            },
            {
              "allowMultiple": false,
              "defaultValue": "",
              "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
              "name": "fields",
              "paramType": "query",
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true,
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "OK",
              "responseModel": "CopyrightResponseEntity«MilestoneContainerRestObject»"
            },
            {
              "code": 401,
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "message": "Forbidden"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "deprecated": "false",
          "type": "CopyrightResponseEntity«MilestoneContainerRestObject»"
        }
      ],
      "path": "/v1/milestones"
    }
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "models": {
    "CopyrightResponseEntity«MilestoneContainerRestObject»": {
      "description": "",
      "id": "CopyrightResponseEntity«MilestoneContainerRestObject»",
      "properties": {}
    },
    "MilestoneRestObject": {
      "description": "",
      "id": "MilestoneRestObject",
      "properties": {}
    },
    "MilestoneContainerRestObject": {
      "description": "",
      "id": "MilestoneContainerRestObject",
      "properties": {
        "milestones": {
          "description": "",
          "items": {
            "type": "MilestoneRestObject"
          },
          "required": false,
          "type": "Array"
        }
      }
    },
    "MilestoneType": {
      "description": "",
      "id": "MilestoneType",
      "properties": {}
    },
    "Statistic": {
      "description": "",
      "id": "Statistic",
      "properties": {}
    },
    "MilestoneAchievementType": {
      "description": "",
      "id": "MilestoneAchievementType",
      "properties": {}
    },
    "BeastLookup": {
      "description": "",
      "id": "BeastLookup",
      "properties": {}
    },
    "Entry«string,List«BeastLookup»»": {
      "description": "",
      "id": "Entry«string,List«BeastLookup»»",
      "properties": {}
    },
    "MilestoneDuration": {
      "description": "",
      "id": "MilestoneDuration",
      "properties": {}
    }
  },
  "produces": [
    "*/*"
  ],
  "resourcePath": "/v1",
  "swaggerVersion": "1.2"
}
